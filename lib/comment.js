"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const github_1 = require("@actions/github");
const core_1 = require("@actions/core");
const commentIdentifier = "<!-- generated by jest-code-coverage-commenter -->";
async function updateOrCreateComment(content, identifier = commentIdentifier) {
    const githubToken = core_1.getInput("github-token") || process.env.GITHUB_TOKEN;
    if (!githubToken) {
        throw new Error("Github access token not supplied.");
    }
    const octokit = github_1.getOctokit(githubToken);
    const comments = await octokit.issues.listComments({
        repo: github_1.context.repo.repo,
        owner: github_1.context.repo.owner,
        issue_number: github_1.context.payload.number,
    });
    const ourOutdatedComment = comments.data.find((comment) => {
        return comment.body.includes(identifier);
    });
    const requestData = {
        repo: github_1.context.repo.repo,
        owner: github_1.context.repo.owner,
        body: content + identifier,
    };
    if (ourOutdatedComment !== undefined) {
        await octokit.issues.updateComment({ ...requestData, comment_id: ourOutdatedComment.id });
    }
    else {
        await octokit.issues.createComment({ ...requestData, issue_number: github_1.context.payload.number });
    }
}
exports.default = updateOrCreateComment;
